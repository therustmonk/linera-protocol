(function() {var implementors = {
"aws_smithy_http":[["impl <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a> for <a class=\"struct\" href=\"aws_smithy_http/body/struct.SdkBody.html\" title=\"struct aws_smithy_http::body::SdkBody\">SdkBody</a>"]],
"axum":[["impl&lt;S&gt; <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a> for <a class=\"struct\" href=\"axum/body/struct.StreamBody.html\" title=\"struct axum::body::StreamBody\">StreamBody</a>&lt;S&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"futures_core/stream/trait.TryStream.html\" title=\"trait futures_core::stream::TryStream\">TryStream</a>,\n    S::<a class=\"associatedtype\" href=\"futures_core/stream/trait.TryStream.html#associatedtype.Ok\" title=\"type futures_core::stream::TryStream::Ok\">Ok</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"bytes/bytes/struct.Bytes.html\" title=\"struct bytes::bytes::Bytes\">Bytes</a>&gt;,\n    S::<a class=\"associatedtype\" href=\"futures_core/stream/trait.TryStream.html#associatedtype.Error\" title=\"type futures_core::stream::TryStream::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"type\" href=\"axum/type.BoxError.html\" title=\"type axum::BoxError\">BoxError</a>&gt;,</span>"]],
"http_body":[],
"hyper":[["impl <a class=\"trait\" href=\"hyper/body/trait.HttpBody.html\" title=\"trait hyper::body::HttpBody\">Body</a> for <a class=\"struct\" href=\"hyper/body/struct.Body.html\" title=\"struct hyper::body::Body\">Body</a>"]],
"tower_http":[["impl&lt;B, C, OnBodyChunkT, OnEosT, OnFailureT&gt; <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a> for <a class=\"struct\" href=\"tower_http/trace/struct.ResponseBody.html\" title=\"struct tower_http::trace::ResponseBody\">ResponseBody</a>&lt;B, C, OnBodyChunkT, OnEosT, OnFailureT&gt;<span class=\"where fmt-newline\">where\n    B: <a class=\"trait\" href=\"http_body/trait.Body.html\" title=\"trait http_body::Body\">Body</a>,\n    B::<a class=\"associatedtype\" href=\"http_body/trait.Body.html#associatedtype.Error\" title=\"type http_body::Body::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + 'static,\n    C: <a class=\"trait\" href=\"tower_http/classify/trait.ClassifyEos.html\" title=\"trait tower_http::classify::ClassifyEos\">ClassifyEos</a>,\n    OnEosT: <a class=\"trait\" href=\"tower_http/trace/trait.OnEos.html\" title=\"trait tower_http::trace::OnEos\">OnEos</a>,\n    OnBodyChunkT: <a class=\"trait\" href=\"tower_http/trace/trait.OnBodyChunk.html\" title=\"trait tower_http::trace::OnBodyChunk\">OnBodyChunk</a>&lt;B::<a class=\"associatedtype\" href=\"http_body/trait.Body.html#associatedtype.Data\" title=\"type http_body::Body::Data\">Data</a>&gt;,\n    OnFailureT: <a class=\"trait\" href=\"tower_http/trace/trait.OnFailure.html\" title=\"trait tower_http::trace::OnFailure\">OnFailure</a>&lt;C::<a class=\"associatedtype\" href=\"tower_http/classify/trait.ClassifyEos.html#associatedtype.FailureClass\" title=\"type tower_http::classify::ClassifyEos::FailureClass\">FailureClass</a>&gt;,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()